---
import { getCollection } from 'astro:content';
import BaseHead from '../../components/BaseHead.astro';
import Footer from '../../components/Footer.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import Header from '../../components/Header.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../../consts';

export async function getStaticPaths({ paginate }) {
	const posts = (await getCollection('blog')).sort(
		(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
	);
	
	// Get all posts except the first one (featured post)
	const paginatedPosts = posts.slice(1);
	
	return paginate(paginatedPosts, { 
		pageSize: 4,
		// This ensures the first page is `/blog/` instead of `/blog/1/`
		// but we'll handle that differently
	});
}

const { page } = Astro.props;
const allPosts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
const featuredPost = allPosts[0];
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			main {
				width: 100%;
				max-width: 1200px;
				margin: 0 auto;
				padding: 2rem 1.5rem;
			}

			.page-header {
				text-align: center;
				margin-bottom: 4rem;
				padding: 3rem 0;
			}

			.page-header h1 {
				font-size: clamp(3rem, 6vw, 5rem);
				margin-bottom: 1rem;
				background: linear-gradient(135deg, var(--primary-dark), var(--accent), var(--secondary));
				-webkit-background-clip: text;
				-webkit-text-fill-color: transparent;
				background-clip: text;
				font-weight: 900;
			}

			.page-subtitle {
				font-size: 1.25rem;
				color: rgba(var(--gray-dark), 0.7);
				max-width: 600px;
				margin: 0 auto;
				line-height: 1.6;
			}

			.blog-grid {
				display: grid;
				grid-template-columns: repeat(auto-fit, minmax(min(380px, 100%), 1fr));
				gap: 2.5rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
				width: 100%;
			}

			.blog-card {
				background: rgba(255, 255, 255, 0.9);
				border: 1px solid rgba(var(--purple-200), 0.4);
				border-radius: 20px;
				overflow: hidden;
				transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
				box-shadow: var(--card-shadow);
				backdrop-filter: blur(20px);
				position: relative;
			}

			.blog-card::before {
				content: '';
				position: absolute;
				top: 0;
				left: 0;
				right: 0;
				height: 4px;
				background: linear-gradient(90deg, var(--accent), var(--secondary));
				opacity: 0;
				transition: opacity 0.3s ease;
			}

			.blog-card:hover {
				transform: translateY(-12px);
				box-shadow: var(--card-shadow-hover);
				border-color: rgba(var(--accent), 0.3);
			}

			.blog-card:hover::before {
				opacity: 1;
			}

			.blog-card a {
				text-decoration: none;
				color: inherit;
				display: block;
				height: 100%;
				border-bottom: none;
			}

			.blog-card a:hover {
				border-bottom: none;
				transform: none;
			}

			.card-content {
				padding: 2rem;
			}

			.blog-title {
				margin: 0 0 1rem 0;
				color: var(--primary-dark);
				line-height: 1.3;
				font-size: 1.5rem;
				font-weight: 700;
				transition: color 0.2s ease;
				display: -webkit-box;
				-webkit-line-clamp: 2;
				-webkit-box-orient: vertical;
				overflow: hidden;
			}

			.blog-card:hover .blog-title {
				color: var(--accent);
			}

			.blog-date {
				margin: 0 0 1.5rem 0;
				color: rgba(var(--gray-dark), 0.6);
				font-size: 0.9rem;
				font-weight: 600;
				text-transform: uppercase;
				letter-spacing: 0.05em;
				display: flex;
				align-items: center;
				gap: 0.5rem;
			}

			.blog-date::before {
				content: '';
				font-family: "Font Awesome 5 Free";
				content: "\f073";
				font-weight: 900;
				font-size: 1rem;
			}

			.blog-description {
				margin: 0;
				color: rgba(var(--gray-dark), 0.8);
				line-height: 1.6;
				font-size: 1rem;
				display: -webkit-box;
				-webkit-line-clamp: 3;
				-webkit-box-orient: vertical;
				overflow: hidden;
			}

			.featured-post {
				grid-column: 1 / -1;
				background: linear-gradient(135deg, rgba(var(--purple-100), 0.9), rgba(var(--blue-100), 0.7));
				border: 2px solid rgba(var(--accent), 0.3);
				position: relative;
			}

			.featured-post::after {
				content: 'LATEST';
				position: absolute;
				top: 1rem;
				right: 1rem;
				background: linear-gradient(135deg, var(--accent), var(--secondary));
				color: white;
				padding: 0.5rem 1rem;
				border-radius: 20px;
				font-size: 0.75rem;
				font-weight: 700;
				letter-spacing: 0.1em;
			}

			.featured-post::before {
				content: '';
				font-family: "Font Awesome 5 Free";
				content: "\f005";
				font-weight: 900;
				position: absolute;
				top: 1rem;
				right: 0.5rem;
				color: var(--accent);
				font-size: 1rem;
				z-index: 2;
			}

			.featured-post .card-content {
				padding: 3rem;
			}

			.featured-post .blog-title {
				font-size: 2.5rem;
				margin-bottom: 1.5rem;
				-webkit-line-clamp: 3;
			}

			.featured-post .blog-description {
				font-size: 1.25rem;
				-webkit-line-clamp: 4;
			}

			/* Pagination Styles */
			.pagination {
				margin-top: 4rem;
				display: flex;
				justify-content: center;
				align-items: center;
				gap: 1rem;
				flex-wrap: wrap;
			}

			.pagination-button {
				display: inline-flex;
				align-items: center;
				justify-content: center;
				padding: 0.75rem 1.25rem;
				border: 2px solid rgba(var(--purple-200), 0.4);
				border-radius: 12px;
				background: rgba(255, 255, 255, 0.9);
				color: var(--primary-dark);
				text-decoration: none;
				font-weight: 600;
				transition: all 0.3s ease;
				backdrop-filter: blur(20px);
				min-width: 48px;
				height: 48px;
			}

			.pagination-button:hover {
				background: var(--accent);
				border-color: var(--accent);
				color: white;
				transform: translateY(-2px);
				box-shadow: 0 8px 25px rgba(var(--accent), 0.3);
			}

			.pagination-button.current {
				background: linear-gradient(135deg, var(--accent), var(--secondary));
				border-color: var(--accent);
				color: white;
				cursor: default;
			}

			.pagination-button.current:hover {
				transform: none;
			}

			.pagination-button:disabled {
				opacity: 0.5;
				cursor: not-allowed;
				pointer-events: none;
			}

			.pagination-info {
				color: rgba(var(--gray-dark), 0.7);
				font-size: 0.9rem;
				font-weight: 600;
			}

			@media (max-width: 768px) {
				.blog-grid {
					grid-template-columns: 1fr;
					gap: 2rem;
				}

				.page-header {
					margin-bottom: 3rem;
					padding: 2rem 0;
				}

				.card-content {
					padding: 1.5rem;
				}

				.featured-post .card-content {
					padding: 2rem 1.5rem;
				}

				.featured-post .blog-title {
					font-size: 2rem;
				}

				.featured-post .blog-description {
					font-size: 1.1rem;
				}

				main {
					padding: 1rem;
				}

				.pagination {
					margin-top: 3rem;
					gap: 0.5rem;
				}

				.pagination-button {
					padding: 0.6rem 1rem;
					min-width: 44px;
					height: 44px;
					font-size: 0.9rem;
				}
			}

			@media (max-width: 480px) {
				main {
					padding: 0.5rem;
				}

				.blog-grid {
					gap: 1.5rem;
				}

				.page-header {
					margin-bottom: 2rem;
					padding: 1.5rem 0;
				}

				.card-content {
					padding: 1.25rem;
				}

				.featured-post .card-content {
					padding: 1.5rem 1.25rem;
				}

				.featured-post .blog-title {
					font-size: 1.75rem;
				}

				.blog-title {
					font-size: 1.25rem;
				}

				.featured-post .blog-description {
					font-size: 1rem;
				}

				.pagination {
					margin-top: 2rem;
				}

				.pagination-button {
					padding: 0.5rem 0.75rem;
					min-width: 40px;
					height: 40px;
					font-size: 0.85rem;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<section class="page-header">
				<h1><i class="fas fa-book-open"></i> Blog Posts</h1>
				<p class="page-subtitle">
					Discover AI-generated insights on web development, programming, and cutting-edge technology trends
				</p>
			</section>

			<section>
				<ul class="blog-grid">
					{/* Always show the featured post on page 1 only */}
					{page.currentPage === 1 && (
						<li class="blog-card featured-post">
							<a href={`/blog/${featuredPost.id}/`}>
								<div class="card-content">
									<h3 class="blog-title">{featuredPost.data.title}</h3>
									<p class="blog-date">
										<FormattedDate date={featuredPost.data.pubDate} />
									</p>
									{featuredPost.data.description && (
										<p class="blog-description">{featuredPost.data.description}</p>
									)}
								</div>
							</a>
						</li>
					)}
					
					{/* Show paginated posts */}
					{
						page.data.map((post) => (
							<li class="blog-card">
								<a href={`/blog/${post.id}/`}>
									<div class="card-content">
										<h3 class="blog-title">{post.data.title}</h3>
										<p class="blog-date">
											<FormattedDate date={post.data.pubDate} />
										</p>
										{post.data.description && (
											<p class="blog-description">{post.data.description}</p>
										)}
									</div>
								</a>
							</li>
						))
					}
				</ul>

				{/* Pagination Navigation */}
				{page.lastPage > 1 && (
					<nav class="pagination">
						{/* Previous Page */}
						{page.url.prev && (
							<a 
								href={page.currentPage === 2 ? '/blog/' : page.url.prev} 
								class="pagination-button"
							>
								<i class="fas fa-chevron-left"></i>
								<span class="sr-only">Previous</span>
							</a>
						)}

						{/* Page Numbers */}
						{Array.from({ length: page.lastPage }, (_, i) => i + 1).map((pageNum) => {
							const isCurrentPage = pageNum === page.currentPage;
							// Handle different URL structure: page 1 is at /blog/, others at /blog/N/
							const pageUrl = pageNum === 1 ? '/blog/' : `/blog/${pageNum}/`;
							
							return (
								<a 
									href={pageUrl} 
									class={`pagination-button ${isCurrentPage ? 'current' : ''}`}
									aria-current={isCurrentPage ? 'page' : undefined}
								>
									{pageNum}
								</a>
							);
						})}

						{/* Next Page */}
						{page.url.next && (
							<a href={page.url.next} class="pagination-button">
								<i class="fas fa-chevron-right"></i>
								<span class="sr-only">Next</span>
							</a>
						)}

						{/* Pagination Info */}
						<div class="pagination-info">
							Page {page.currentPage} of {page.lastPage}
						</div>
					</nav>
				)}
			</section>
		</main>
		<Footer />
	</body>
</html>